BB_N = 2
pre = """//degub plotty autogenerated by scripts\to_dotty_regex_coprocessor_generation.py
    function string to_dotty();
            string result = "digraph{\\n rankdir = \\"LR\\"\\n";
            
            string channel_name ,bb_name   , switch_name , switch_name_prev ;
            string dotty_channel, dotty_abb, dotty_switch;

            $sformat(result, "%s current_char [label=\"current char = %c\"];", result, cur_cc);\n"""
middle = []
for i in range(0,BB_N):
    
    i_prev = BB_N-1 if i == 0 else i-1

    middle.append( f"""$sformat(channel_name, "fifo_channel_%0d_%0d",{i_prev},{i});
                dotty_channel = g[{i}].fifo_channel.to_dotty(channel_name);

                $sformat(switch_name, "switch_%0d",{i});
                dotty_switch = g[{i}].aswitch.to_dotty(switch_name);
                $sformat(switch_name_prev, "switch_%0d",{i_prev});

                $sformat(bb_name, "bb%0d",{i});
                dotty_abb = g[{i}].abb.to_dotty(bb_name);

                $sformat(result, {{"%s %s\\n",
                            "%s:<first> -> %s_in_1  %s;\\n",
                            "%s_out_1   -> %s:<last> %s;\\n",
                            "%s_output -> %s_in_0 %s;\\n ",
                            "%s_out_0  -> %s_input %s;\\n ",
                            "%s\\n %s \\n"}}, result, dotty_channel,
                                        channel_name, switch_name     , (station_input_pc_valid[{i}] && station_input_pc_ready[{i}]     ? "[color=\\"green\\"]" : ""),
                                        switch_name_prev, channel_name, (channel_input_pc_valid[{i}] && channel_input_pc_ready[{i}]     ? "[color=\\"green\\"]" : ""),
                                        bb_name     ,switch_name      , (bb_output_pc_valid[{i}] && bb_output_pc_ready[{i}]             ? "[color=\\"green\\"]" : ""),
                                        switch_name, bb_name          , (bb_input_pc_valid[{i}] && bb_input_pc_ready[{i}]               ? "[color=\\"green\\"]" : ""),
                                        dotty_switch, dotty_abb );     
                """)
           
            
post = """$strobe("%s}", result);
    
        
    endfunction"""

print(pre, *middle, post)